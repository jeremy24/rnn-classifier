#!/usr/bin/fish

#source /home/ipp/virt_envs/tensorflow3_xla/bin/activate.fish



# set the lib path to enable tracing for cuda
set -g -x	LD_LIBRARY_PATH /usr/local/cuda/extras/CUPTI/lib64:$LD_LIBRARY_PATH

# set the path to use tcmalloc instead
set -g -x LD_PRELOAD /usr/lib/libtcmalloc.so


set -g -x  CUDA_VISIBLE_DEVICES "0"



if	count $argv > /dev/null

	set dir $argv[1]	
	
	set num_tests 2000
	set print_cycle 50000
	set lr 0.005
	set out_prob 0.8
	set in_prob 0.8
	set num_layers 1
	set rnn_size 200
	set gpu 0 
	set seq_len 128
	set num_epochs 3000
	set save_every 20000
	set data_dir .
	set log_dir $dir"/logs"
	set batch_size 100
	set max_grad 5
	set decay_rate 1
	set model "lstm"
	set use_weights 1

	set init_from ""
	set init 0

	set input_dir "./inputs/"

	set do_delete 0
	set do_test 0
	
	set no_delete = 0

	for arg in $argv
		switch "$arg"
			case --delete
				set do_delete 1
			case --test 
				set do_test 1
			case --no_weights
				set use_weights 0
			case --short
				set num_epochs 1
			case --long
				set num_epochs 10
			case --medium
				set num_epochs 5
			case --init
				set init 1
			case --no_delete
				set no_delete 1
			end
	end	


	if [ $do_delete = 1 ]
		echo "Deleting the save dir first"
		rm -rf $save_dir $log_dir $dir
		rm ./results/*
	end


	#if test (count $argv) = 2
	#	set do_delete $argv[2]
	#	if [ $do_delete = "true" ]
	#		echo "Deleting the save dir first.."
	#		rm -rf $save_dir
	#		rm -rf $log_dir
	#		rm -rf $dir
	#	end
	#end
	

	set save_dir $dir"/save"


	echo "Making save directories..."
	echo $dir $save_dir $log_dir
	mkdir -p $dir $save_dir $log_dir
	mkdir -p "letters" "results"

	if [ $init = 1 ]
		set init_from $save_dir
		echo \n"Initializing a saved model from "$init_from
	end


	if not test -d $input_dir
		echo \n"Inputs directory does not exist: "$input_dir
		exit
	end

	echo "Launching the model..."
	python train.py --init_from=$init_from	 --model=$model --use_weights=$use_weights --decay_rate=$decay_rate --max_gradient=$max_grad --batch_size=$batch_size --log_dir=$log_dir --data_dir=$data_dir --save_dir=$save_dir --print_cycle=$print_cycle --seq_length=$seq_len --num_epochs=$num_epochs --learning_rate=$lr --save_every=$save_every --output_keep_prob=$out_prob --input_keep_prob=$in_prob --num_layers=$num_layers --rnn_size=$rnn_size --gpu=$gpu


	if [ $no_delete = 1 ]
		echo "Changing model mode to 550"
		chmod -R -w $save_dir
	end

	#python test.py --save_dir=$save_dir -n $num_tests

	if [ $do_test = 1 ]
		echo "Testing..."
		python test.py --save_dir=$save_dir -n=$num_tests
	end
	
else
	echo "Please provide a directory for the model data."
end
